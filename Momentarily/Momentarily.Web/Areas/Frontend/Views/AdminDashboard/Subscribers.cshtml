
@model Apeek.ViewModels.Models.Impl.SubscriberViewModel
@{
    Layout = "~/Areas/Frontend/Views/Shared/_AdminDashboardLayoutNew.cshtml";
}


@using (Html.BeginForm("Subscribers", "AdminDashboard", FormMethod.Post, new { @class = "Admin_dashboard" }))
{
    @Html.HiddenFor(x => x.Status)
    <div class="page-header">
        <div class="row align-items-end">
            <div class="col-lg-8">
                <div class="page-header-title">
                    <div class="d-inline">
                        @if (Model.Status == "All")
                        {
                            <h4>Total subscriber </h4>
                        }
                        else
                        {
                            <h4>Daily subscriber </h4>
                        }

                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="page-header-breadcrumb">
                    <ul class="breadcrumb-title parentModulesInner">
                        <li class="breadcrumb-item">
                            <a href="/AdminDashboard/"> <i class="feather icon-home"></i> </a>
                        </li>
                        <li class="breadcrumb-item"><a href="#!">Subscriber List</a> </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="page-body">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-block">
                        <div class="card-header">
                            <h5>Subscriber List</h5>
                            <div class="card-header-right">
                                <ul class="list-unstyled card-option">
                                    <li><i class="feather icon-minus minimize-card"></i></li>
                                </ul>
                            </div>
                        </div>
                        <div class="card-block">
                            <div class="row">
                                <div class="table-responsive">
                                    <table id="subscriberlist" class="table table-bordered table-striped usertable">
                                        <thead>
                                            <tr>

                                                <th>Sr.No #</th>
                                                <th>Subscriber</th>
                                                <th>Created On</th>
                                                <th>Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{ int count = 1; }
                                            @for (int i = 0; i < Model.subscribers.Count(); i++)
                                            {
                                                var status_ = Model.subscribers[i].SubscribeStatus;
                                                <tr id="@("row"+Model.subscribers[i].Id)">
                                                    <td>
                                                        @count
                                                        @Html.HiddenFor(m => m.subscribers[i].Id)
                                                        @*@Html.DisplayFor(m => m.subscribers[i].Id)*@
                                                    </td>
                                                    <td>@Html.DisplayFor(m => m.subscribers[i].Email)</td>

                                                    <td>
                                                        @Html.DisplayFor(m => m.subscribers[i].CreatedDate)
                                                    </td>
                                                    <td>
                                                        @if (status_ == true)
                                                        {
                                                            <button type="button" class="label-subscribed" value="subscribed">Subscribed</button>
                                                        }
                                                        else
                                                        {
                                                            <button type="button" class="label-unsubscribed" value="unsubscribed">Unsubscribed</button>
                                                        }
                                                    </td>
                                                </tr>
                                                count++;
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="inputContainer text-right">
                                    <button type="button" id="btnExportToCsv" style="background-color:#cf2d1e; border-color: #fff;" class="btn btn-primary">EXPORT TO CSV</button>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
    <div id="divLoading">
        <p>
            Loading. Please wait...<br />
            <span>
                <img src="~/Content/Images/circleloadinganimationOrignal.gif" alt="image" />
            </span>
        </p>

    </div>

}
<link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
<script src="~/plugins/jquery/jquery.js"></script>
<link href="~/Content/ToastMessage/toastr.css" rel="stylesheet" />
<script src="~/Content/ToastMessage/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        $('#subscriberlist').DataTable({
           /* responsive: true,  */
            //"paging": true,
            //"lengthChange": false,
            //"searching": false,
            //"ordering": true,
            //"info": true,
            //"autoWidth": false,
        });
    });
    $('.minimize-card').click(function () {
        var cardBlock = $(this).closest('.card').find('.card-block');
        cardBlock.slideToggle(1000);

        $(this).find('i').toggleClass('icon-minus icon-plus');
    });

    $("#btnExportToCsv").click(function () {

        var Status = $("#Status").val();
        var count = '@Model.subscribers.Count()';

        if(count >0)
        {
        $('#divLoading').show();
            $.ajax({
                cache: false,
                type: 'POST',
                url: '@Url.Action("ExportToCsvSubscribers", "AdminDashboard")',

                data: { status: Status },
                success: function (data) {
                    window.location = '/AdminDashboard/Download?fileGuid=' + data.FileGuid
                        + '&filename=' + data.FileName;
                    $('#divLoading').hide();
                    toastr.success('Successfully downloaded .xlsx file.')
                },
                error: function (data) {
                    $('#divLoading').hide();
                    toastr.error('Something went wrong !')
                }
            });
        }
        else
        {
            toastr.warning('No data available in table')
        }


    });
</script>
<style>
    .main-body .page-wrapper .page-header-title h4 {
        text-transform: none !important;
    }

    .label-subscribed {
        color: #ffffff;
        font-weight: bold;
        border: none;
        background-color: #52c062;
        border-radius: 3px;
        font-size: 11.998px;
    }

    .label-unsubscribed {
        color: #ffffff;
        font-weight: bold;
        border: none;
        background-color: #de5351;
        border-radius: 3px;
        font-size: 11.998px;
    }

    #divLoading {
        margin: 0px;
        padding: 0px;
        position: fixed;
        right: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        background-color: #666666;
        z-index: 30001;
        opacity: .8;
        filter: alpha(opacity=70);
        display: none
    }

        #divLoading p {
            position: fixed;
            top: 30%;
            left: 45%;
            color: White;
        }

        #divLoading span > img {
            padding-left: 44px;
        }
</style>
