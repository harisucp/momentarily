@model Apeek.ViewModels.Models.Impl.AdminReportingVM

@{
    Layout = "~/Areas/Frontend/Views/Shared/_AdminDashboardLayoutNew.cshtml";
    var _goodTotalCountMonthWise = Model.productsLists.ToList();
    var _sharerListMonthWise = Model.sharersLists.ToList();
    var _categoriesListCountMonthWise = Model.categoriesList.ToList();
    var _borrowersListCountMonthWise = Model.borrowersList.ToList();
}


@using (Html.BeginForm("TransactionReport", "AdminDashboard", FormMethod.Post, new { @id = "Admin_TransactionReport" }))
{
    <div class="page-header non-printable">
        <div class="row align-items-end">
            <div class="col-lg-8">
                <div class="page-header-title">
                    <div class="d-inline">
                        <h4>Transaction Report</h4>

                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="page-header-breadcrumb">
                    <ul class="breadcrumb-title parentReportInner">
                        <li class="breadcrumb-item">
                            <a href="/AdminDashboard/"> <i class="feather icon-home"></i> </a>
                        </li>
                        <li class="breadcrumb-item"><a href="#!">Transaction Report</a> </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="page-body">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    @*<div class="card-header">
                            <h5>Transaction Report</h5>

                            <div class="card-header-right">
                                <ul class="list-unstyled card-option">
                                    <li><i class="feather icon-minus minimize-card"></i></li>
                                </ul>
                            </div>
                        </div>*@
                    <div class="card-block">
                        <div class="row non-printable">

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInputOldPassword1">Start Date</label>
                                    <div class="inputContainer">
                                        <input type="text" id="StartRentalDate" placeholder="Select Start Date" class="form-control" value="@Model.StartRentalDate.ToShortDateString()">
                                        @Html.HiddenFor(x => x.StartRentalDate)

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInputOldPassword1">End Date</label>
                                    <div class="inputContainer">
                                        <input type="text" id="EndRentalDate" placeholder="Select End Date" class="form-control" value="@Model.EndRentalDate.ToShortDateString()">
                                        @Html.HiddenFor(x => x.EndRentalDate)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInput">Sharer Name</label>
                                    <div class="inputContainer">

                                        <input type="text" id="SharerId" value="" placeholder="Search Sharer Name" class="form-control">
                                        @Html.HiddenFor(x => x.SharerId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInput">Borrower Name</label>
                                    <div class="inputContainer">
                                        <input type="text" id="BorrowerId" placeholder="Search Borrower Name" class="form-control">
                                        @Html.HiddenFor(x => x.BorrowerId)
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row non-printable">

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInputOldPassword1">Select Category</label>
                                    <div class="inputContainer">
                                        @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>)ViewData["DDLCategories"], "Select Category", new { @class = "form-control" })
                                        @Html.HiddenFor(x => x.CategoryId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInputOldPassword1">Item Name</label>
                                    <div class="inputContainer">
                                        <input type="text" id="GoodNameId" placeholder="Enter Item Name" class="form-control">
                                        @Html.HiddenFor(x => x.GoodNameId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInputOldPassword1">Amount Range</label>
                                    <div class="inputContainer">
                                        @Html.DropDownList("AmountRangeId", new List<SelectListItem>

                                           {
                                              new SelectListItem{ Text="$0-$50", Value = "1" },
                                              new SelectListItem{ Text="$50-$100", Value = "2" },
                                               new SelectListItem{ Text="$100-$200", Value = "3" },
                                                new SelectListItem{ Text="$200-$300", Value = "4" },
                                                 new SelectListItem{ Text="$300-$400", Value = "5" },
                                                  new SelectListItem{ Text="$400-$500", Value = "6" },
                                                   new SelectListItem{ Text="$500-$1000", Value = "7" },
                                                    new SelectListItem{ Text="Above", Value = "8" }
                                           },"Select Amount",new { @class = "form-control" })
                                        @Html.HiddenFor(x => x.AmountRangeId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="exampleInputOldPassword1" style="visibility:hidden">Blank</label>
                                    <div class="inputContainer text-right">
                                        <button type="button" id="btnSubmit" style="background-color:#cf2d1e; border-color: #fff;" class="btn btn-primary">APPLY FILTERS</button>
                                    </div>
                                </div>
                            </div>


                        </div>
                        <hr class="row">

                        <div id="idAdminTransaction">
                           
                                <div class="row dummyHideDiv" style="display:none">
                                    <div class="col-lg-12 text-center form-group">
                                        <h3 style="font-size: 2.75rem;">Transaction Report</h3>
                                    </div>

                                </div>
                                <div class="row dummyHideDiv hideDivTablecss" style="display:none">
                                    <div class="table-responsive">


                                        <div class="col-md-12">
                                            <table class="table table-bordered table-striped itemstable">
                                                <tr>
                                                    <th style="text-align:center">Start Date</th>
                                                    <th style="text-align:center">End Date</th>
                                                    <th style="text-align:center">Sharer Name</th>
                                                    <th style="text-align:center">Borrower Name</th>

                                                </tr>
                                                <tr>
                                                    <td>
                                                        <input class="removeDummyBoder" id="_dummyStart" value="" />

                                                    </td>
                                                    <td>
                                                        <input class="removeDummyBoder" id="_dummyEnd" value="" />

                                                    </td>
                                                    <td>
                                                        <input class="removeDummyBoder" id="_dummySharer" value="" />

                                                    </td>
                                                    <td>
                                                        <input class="removeDummyBoder" id="_dummyBorrower" value="" />

                                                    </td>

                                                </tr>
                                                <tr>

                                                    <th style="text-align:center">Category</th>
                                                    <th style="text-align:center">Item Name</th>
                                                    <th style="text-align:center">Amount Range</th>
                                                    <th style="text-align:center"></th>
                                                </tr>
                                                <tr style="text-align:center">
                                                    <td>
                                                        <input class="removeDummyBoder" id="_dummyCategory" value="" />

                                                    </td>
                                                    <td>
                                                        <input class="removeDummyBoder" id="_dummyItem" value="" />

                                                    </td>
                                                    <td>
                                                        <input class="removeDummyBoder" id="_dummyAmount" value="" />
                                                    </td>
                                                    <td></td>
                                                </tr>
                                            </table>
                                        </div>

                                    </div>

                                </div>

                                <div class="row">

                                    <div class="col-xl-6 col-md-6">
                                        <div class="card">
                                            <div id="chartContainerThree" style="height: 300px; width: 100%;"></div>
                                        </div>

                                    </div>
                                    <div class="col-xl-6 col-md-6">
                                        <div class="card">
                                            <div id="chartContainerCategoryWise" style="height: 300px; width: 100%;"></div>
                                        </div>

                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-xl-6 col-md-6">
                                        <div class="card">
                                            <div id="chartContainerSharer" style="height: 300px; width: 100%;"></div>
                                        </div>

                                    </div>


                                    <div class="col-xl-6 col-md-6">
                                        <div class="card">
                                            <div id="chartContainerBorrowersMonthWise" style="height: 300px; width: 100%;"></div>
                                        </div>

                                    </div>
                                </div>
                          
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="inputContainer text-right">
                                    <button type="button" id="btnPrint" style="background-color:#cf2d1e; border-color: #fff;" class="btn btn-primary">PRINT</button>
                                    <button type="button" id="btnExportToCsv" style="background-color:#cf2d1e; border-color: #fff;" class="btn btn-primary">EXPORT TO CSV</button>
                                </div>

                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="divLoading">
        <p>
            Loading. Please wait...<br />
            <span>
                <img src="~/Content/Images/circleloadinganimationOrignal.gif" alt="image" />
            </span>
        </p>

    </div>

}

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
<link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />

<script src="~/AdminContent/Admity/js/canvasjs.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="~/plugins/jquery/jquery.js"></script>
@*<script src="//code.jquery.com/jquery-1.10.2.js"></script>*@
<script src="~/plugins/jquery-ui/jquery-ui.js"></script>
<script src="~/AdminContent/html2canvas.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jspdf@1.5.3/dist/jspdf.min.js"></script>
<link href="~/Content/ToastMessage/toastr.css" rel="stylesheet" />
<script src="~/Content/ToastMessage/toastr.min.js"></script>
<style>
    .gj-datepicker-bootstrap [role=right-icon] button {
        height: 35px !important;
    }

    #chartContainerThree > div, #chartContainerCategoryWise > div, #chartContainerSharer > div, #chartContainerBorrowersMonthWise > div {
        width: 100%;
    }

        #chartContainerThree > div > canvas, #chartContainerCategoryWise > div > canvas, #chartContainerSharer > div > canvas, #chartContainerBorrowersMonthWise > div {
            width: 100%;
        }


    #divLoading {
        margin: 0px;
        padding: 0px;
        position: fixed;
        right: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        background-color: #666666;
        z-index: 30001;
        opacity: .8;
        filter: alpha(opacity=70);
        display: none
    }

        #divLoading p {
            position: fixed;
            top: 30%;
            left: 45%;
            color: White;
        }

        #divLoading span > img {
            padding-left: 44px;
        }
    table th, tr>td {
        border: thin solid black;
        text-align: center;
        font-weight: bold;
        font-size: larger;
    }


</style>

<script>

    $("#btnPrint").click(function () {
        
        $(".removeDummyBoder").css("border", "1px");
        $(".removeDummyBoder").css("text-align", "center");
        var startRentalDate = $("#StartRentalDate").val();
        if (startRentalDate == "") {
            startRentalDate = strdateNew;
        }
        $("#_dummyStart").val(startRentalDate);
        var endRentalDate = $("#EndRentalDate").val();
        if (endRentalDate == "") {
            endRentalDate = endRentalDate;
        }
        $("#_dummyEnd").val(startRentalDate);
        var searchShareName = $("#SharerId").val();
        if (searchShareName == "") {
            $("#_dummySharer").val("N/A");
        }
        else {
            $("#_dummySharer").val(searchShareName);
        }
        var searchBorrowerName = $("#BorrowerId").val();
        if (searchBorrowerName == "") {
            $("#_dummyBorrower").val("N/A");
        }
        else {
            $("#_dummyBorrower").val(searchBorrowerName);
        }
        var categoryId = $("#CategoryId").val();
        var categorySelectedText = $("#CategoryId option:selected").text();
        if (categoryId == "" || categoryId == "Select Category") {
            categoryId = 0;
        }
        if (categoryId == 0 || categoryId == "Select Category") {
            $("#_dummyCategory").val("N/A");
        }
        else {
            $("#_dummyCategory").val(categorySelectedText);
        }

        var ItemName = $("#GoodNameId").val();
        if (ItemName == "") {
            $("#_dummyItem").val("N/A");
        }
        else {
            $("#_dummyItem").val(ItemName);
        }

        var amountRangeId = $("#AmountRangeId").val();
        var amountSelectedText = $("#AmountRangeId option:selected").text();
        if (amountRangeId == "" || amountRangeId == "Select Amount") {
            amountRangeId = 0;
        }
        if (amountRangeId == 0 || amountRangeId == "Select Amount") {
            $("#_dummyAmount").val("N/A");
        }
        else {
            $("#_dummyAmount").val(amountSelectedText);
        }



        $(".dummyHideDiv").css("display", "block");
        $('#divLoading').show();
        html2canvas(document.querySelector("#idAdminTransaction"), { height: 1800, width: window.innerWidth * 1, scale: 1 }).then(canvas => {
            var dataURL = canvas.toDataURL();
            var pdf = new jsPDF();
            pdf.addImage(dataURL, 'JPEG', 27, -5, 200, 300); //addImage(image, format, x-coordinate, y-coordinate, width, height)
            pdf.save("Graph Reports.pdf");
            $(".dummyHideDiv").css("display", "none");
            $('#divLoading').hide();
            toastr.success('Successfully downloaded Pdf file.')
        });
    });





    var d = new Date();
    //var strDate = d.getFullYear() + "/" + (d.getMonth() + 1) + "/" + d.getDate();
    var strdateNew = (d.getMonth() + 1) + "/" + d.getDate() + "/" + d.getFullYear();
    var optSimple = {
        format: 'mm-dd-yyyy',
        todayHighlight: true,
        orientation: 'bottom right',
        autoclose: true,
        container: '#sandbox'
    };
    $('#StartRentalDate').datepicker({
        uiLibrary: 'bootstrap4'
    });

    $('#EndRentalDate').datepicker({
        uiLibrary: 'bootstrap4',
        maxDate: 0
    });


    $('#StartRentalDate').on('click', function (e) {
        e.preventDefault();
        $(this).attr("autocomplete", "off");
    });
    $('#EndRentalDate').on('click', function (e) {
        e.preventDefault();
        $(this).attr("autocomplete", "off");
    });
    var submitStatus = false;
    var concateLastOneMonth = "";
    $(document).ready(function () {

        $(".removeDummyBoder").css("border", "1px");
        $(".removeDummyBoder").css("text-align", "center");
        var startRentalDate = $("#StartRentalDate").val();
        if (startRentalDate == "") {
            startRentalDate = strdateNew;
        }
        $("#_dummyStart").val(startRentalDate);
        var endRentalDate = $("#EndRentalDate").val();
        if (endRentalDate == "") {
            endRentalDate = endRentalDate;
        }
        $("#_dummyEnd").val(startRentalDate);
        var searchShareName = $("#SharerId").val();
        if (searchShareName == "") {
            $("#_dummySharer").val("N/A");
        }
        else {
            $("#_dummySharer").val(searchShareName);
        }
        var searchBorrowerName = $("#BorrowerId").val();
        if (searchBorrowerName == "") {
            $("#_dummyBorrower").val("N/A");
        }
        else {
            $("#_dummyBorrower").val(searchBorrowerName);
        }
        var categoryId = $("#CategoryId").val();
        var categorySelectedText = $("#CategoryId option:selected").text();
        if (categoryId == "" || categoryId == "Select Category") {
            categoryId = 0;
        }
        if (categoryId == 0 || categoryId == "Select Category") {
            $("#_dummyCategory").val("N/A");
        }
        else {
            $("#_dummyCategory").val(categorySelectedText);
        }

        var ItemName = $("#GoodNameId").val();
        if (ItemName == "") {
            $("#_dummyItem").val("N/A");
        }
        else {
            $("#_dummyItem").val(ItemName);
        }

        var amountRangeId = $("#AmountRangeId").val();
        var amountSelectedText = $("#AmountRangeId option:selected").text();
        if (amountRangeId == "" || amountRangeId == "Select Amount") {
            amountRangeId = 0;
        }
        if (amountRangeId == 0 || amountRangeId == "Select Amount") {
            $("#_dummyAmount").val("N/A");
        }
        else {
            $("#_dummyAmount").val(amountSelectedText);
        }




        $("#SharerId").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/AdminDashboard/GetTotal_DLL_Lenderslist",
                    type: "GET",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
        $("#BorrowerId").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/AdminDashboard/GetTotal_DLL_Borrowerslist",
                    type: "GET",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name };
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });

        var dd1 =@Html.Raw(Json.Encode(_goodTotalCountMonthWise));
        var dd2 =@Html.Raw(Json.Encode(_sharerListMonthWise));
        var dd3 =@Html.Raw(Json.Encode(_categoriesListCountMonthWise));
        var dd4 =@Html.Raw(Json.Encode(_borrowersListCountMonthWise));
        if (submitStatus == false) {
            GoodTotalCountMonthWise(dd1);
            SharerTotalCountMonthWise(dd2);
            CategoryWiseItem(dd3);
            BorrowersMonthWise(dd4);
            concateLastOneMonth = "(Last One Month)";
        }

    });

    var dataGoodTotalCountMonthWise = null;
    var dataSharerTotalCountMonthWise = null;
    var dataCategoryWiseItems = null;
    var dataBorrowersCountMonthWise = null;

    $("#btnSubmit").click(function () {
        
        var startRentalDate = $("#StartRentalDate").val();
        if (startRentalDate == "") {
            startRentalDate = strdateNew;
        }
        var endRentalDate = $("#EndRentalDate").val();
        if (endRentalDate == "") {
            endRentalDate = strdateNew;
        }
        var searchShareName = $("#SharerId").val();
        var searchBorrowerName = $("#BorrowerId").val();
        var categoryId = $("#CategoryId").val();
        if (categoryId == "" || categoryId == "Select Category") {
            categoryId = 0;
        }
        var ItemName = $("#GoodNameId").val();
        var amountRangeId = $("#AmountRangeId").val();
        if (amountRangeId == "" || amountRangeId == "Select Amount") {
            amountRangeId = 0;
        }
        $('#divLoading').show();
        $.ajax({
            url: "/AdminDashboard/TransactionReportPartial",
            type: "Post",
            dataType: "json",
            data: { startRentalDate: startRentalDate, endRentalDate: endRentalDate, searchShareName: searchShareName, searchBorrowerName: searchBorrowerName, categoryId: categoryId, ItemName: ItemName, amountRangeId: amountRangeId },
            success: function (data) {
                GoodTotalCountMonthWise(data.productsLists);
                SharerTotalCountMonthWise(data.sharersLists);
                CategoryWiseItem(data.categoriesList);
                BorrowersMonthWise(data.borrowersList);
                submitStatus = true;
                $('#divLoading').hide();
            },
            error: function () {
                toastr.error('Something went wrong !')
            }
        })
    });


    function GoodTotalCountMonthWise(dataGoodTotalCountMonthWise) {

        var _dataGoodTotalCountMonthWise = [];

        for (var k = 0; k < dataGoodTotalCountMonthWise.length; k++) {
            _dataGoodTotalCountMonthWise.push({
                y: dataGoodTotalCountMonthWise[k].Count,
                label: dataGoodTotalCountMonthWise[k].Month
            });
        }
         var chartGoodTotalCountMonthWise = new CanvasJS.Chart("chartContainerThree", {
            animationEnabled: true,
            title: {
                text: "Goods"
                //text: submitStatus == false ?"Good Items Month Wise(Last One Month)": "Good Items Month Wise"
            },
            axisX: {
                interval: 1
            }
            ,
            //axisY: {
            //    title: "Precipitation (in inch)",
            //    suffix: " in",
            //    includeZero: false
            //},
            toolTip: {
                shared: true
            },
            data: [{
                type: "area",
                name: "Predicted",
                toolTipContent: "<b>{label}</b><br><span style=\"color:#4F81BC\">{Month}</span> {y}",
                markerType: "none",
                dataPoints: _dataGoodTotalCountMonthWise

            }]
        });
        chartGoodTotalCountMonthWise.render();

    }

    function SharerTotalCountMonthWise(dataSharerTotalCountMonthWise) {

        var _dataSharerTotalCountMonthWise = [];

        for (var k = 0; k < dataSharerTotalCountMonthWise.length; k++) {
            _dataSharerTotalCountMonthWise.push({
                y: dataSharerTotalCountMonthWise[k].Count,
                label: dataSharerTotalCountMonthWise[k].Month
            });
        }
        var chartSharerTotalCountMonthWise = new CanvasJS.Chart("chartContainerSharer", {
            animationEnabled: true,
            title: {
                text: "Sharers"
                //text: submitStatus == false ? "Sharer Month Wise(Last One Month)" : "Sharer Month Wise"
            },
            axisX: {
                interval: 1
            }
            ,
            //axisY: {
            //    title: "Precipitation (in inch)",
            //    suffix: " in",
            //    includeZero: false
            //},
            toolTip: {
                shared: true
            },
            data: [{
                type: "column",
                name: "Predicted",
                toolTipContent: "<b>{label}</b><br><span style=\"color:#4F81BC\">{Month}</span> {y}",
                markerType: "none",
                dataPoints: _dataSharerTotalCountMonthWise

            }]
        });
        chartSharerTotalCountMonthWise.render();
    }

    function CategoryWiseItem(dataCategoryWiseItems) {
        var _dataCategoryWiseItem = [];

        for (var k = 0; k < dataCategoryWiseItems.length; k++) {
            _dataCategoryWiseItem.push({
                y: dataCategoryWiseItems[k].Count,
                label: dataCategoryWiseItems[k].CategoryName
            });
        }
        var chartCategoryWise = new CanvasJS.Chart("chartContainerCategoryWise", {
            animationEnabled: true,
            //theme: "light2", // "light1", "light2", "dark1", "dark2"
            title: {
                text: "Categories"
                 //text: submitStatus == false ? "Category Wise Items(Last One Month)" : "Category Wise Items"
            },
            axisY: {
                title: " "
            },
            data: [{
                type: "pie",
                //showInLegend: true,
                //legendMarkerColor: "grey",
                //legendText: "Total ",
                dataPoints: _dataCategoryWiseItem
            }]
        });
        chartCategoryWise.render();
    }


    function BorrowersMonthWise(dataBorrowersCountMonthWise) {
        var _dataBorrowersMonthWise = [];

        for (var k = 0; k < dataBorrowersCountMonthWise.length; k++) {
            
            _dataBorrowersMonthWise.push({
                y: dataBorrowersCountMonthWise[k].Count,
                label: dataBorrowersCountMonthWise[k].Month
            });
        }
        var chartBorrowersMonthWise = new CanvasJS.Chart("chartContainerBorrowersMonthWise", {
            animationEnabled: true,
            //theme: "light2",
            title: {
                text: "Borrowers"
                //text: submitStatus == false ? "Borrowers Month Wise(Last One Month)" : "Borrowers Month Wise"
            },
            axisX: {
                interval: 1
            }
            ,

            toolTip: {
                shared: true
            },
            data: [{
                type: "area",
                name: "Predicted",
                toolTipContent: "<b>{label}</b><br><span style=\"color:#4F81BC\">{Month}</span> {y}",
                markerType: "none",
                dataPoints: _dataBorrowersMonthWise
            }]
        });
        chartBorrowersMonthWise.render();
    }


    $("#btnExportToCsv").click(function () {
        
        var startRentalDate = $("#StartRentalDate").val();
        if (startRentalDate == "") {
            startRentalDate = strdateNew;
        }
        var endRentalDate = $("#EndRentalDate").val();
        if (endRentalDate == "") {
            endRentalDate = strdateNew;
        }
        var searchShareName = $("#SharerId").val();
        var searchBorrowerName = $("#BorrowerId").val();
        var categoryId = $("#CategoryId").val();
        if (categoryId == "" || categoryId == "Select Category") {
            categoryId = 0;
        }
        var ItemName = $("#GoodNameId").val();
        var amountRangeId = $("#AmountRangeId").val();
        if (amountRangeId == "" || amountRangeId == "Select Amount") {
            amountRangeId = 0;
        }
        $('#divLoading').show();

        $.ajax({
            cache: false,
            type: 'POST',
            url: '@Url.Action("ExportToCsv", "AdminDashboard")',
            //processData: false,
            //contentType: false,
            data: { startRentalDate: startRentalDate, endRentalDate: endRentalDate, searchShareName: searchShareName, searchBorrowerName: searchBorrowerName, categoryId: categoryId, ItemName: ItemName, amountRangeId: amountRangeId },
            success: function (data) {
                window.location = '/AdminDashboard/Download?fileGuid=' + data.FileGuid
                    + '&filename=' + data.FileName;
                $('#divLoading').hide();
                toastr.success('Successfully downloaded .xlsx file.')
                },
                error: function (data) {
                    $('#divLoading').hide();
                    toastr.error('Something went wrong !')
                }
            });


        @*$.post('@Url.Action("ExportToCsv", "AdminDashboard")', { startRentalDate: startRentalDate, endRentalDate: endRentalDate, searchShareName: searchShareName, searchBorrowerName: searchBorrowerName, categoryId: categoryId, ItemName: ItemName, amountRangeId: amountRangeId },
            function (data) {
                alert(data);
                $('#divLoading').hide();
            }
        );*@


    });


    @*$("#btnPrint").click(function () {
        var textCanvas = $("#idAdminTransaction").html();
        $.post('@Url.Action("Export", "AdminDashboard")', { GridHtml: textCanvas });
        
        //$.ajax({
        //    url: "/AdminDashboard/Export",
        //    type: "Post",
        //    data: { GridHtml: textCanvas},
        //    success: function (data) {
        //        alert("Something went wrong!")
        //    },
        //    error: function () {
        //        alert("Something went wrong!")
        //    }

        //})

    });*@




</script>