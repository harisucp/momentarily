@model Apeek.Common.IShape<Apeek.ViewModels.Models.UserConversationViewModel>
@{
    ViewBag.Title = "My Conversation";
    Layout = "~/Areas/Frontend/Views/Shared/_AccountMenuLayout.cshtml";

}
@Styles.Render("~/Content/css/messages")


<link href="~/Content/CustomCssFiles/MessagePage.css" rel="stylesheet" />
<style>
    .background-container {
        background-color: #ffff; /*#f5f5f5;*/
        padding: 20px;
        border: 1px solid #ccc;
    }


    .message-user {
        /*text-align: right;*/
        background-color: #ffffff;
        color: #fff;
        margin: 5px;
        padding: 10px;
        border-radius: 5px;
        clear: both;
        float: right;
        height: 59px;
        border-radius: 30px 0px 30px 30px;
        box-shadow: #f1f1f1 0px 0px 6px 5px;
    }

    .message-recipient {
        text-align: left;
        background-color: #f1f4ff;
        color: #333;
        margin: 5px;
        padding: 10px;
        border-radius: 5px;
        clear: both;
        height: 59px;
        float: left;
        border-radius: 0px 15px 15px 20px;
    }

    .messageStyle {
        margin-top: 13px;
    }

    .form-conversation {
        margin-top: 20px;
    }

    .margin {
        margin-top: 5px;
    }

    .imgStart {
        margin-left: -19px !important;
    }

    .textField {
        height: 40px;
        border-radius: 7px;
    }

    .inputArea {
        background-color: #ffff;
        border: none;
    }

    .imgContent {
        margin-top: -3px;
        display: flex; /*justify-content:unset;*/
    }
</style>

@*<link href="~/Content/css/messages.css" rel="stylesheet" />*@
<div class="content" ng-controller="ConversationController as conversation" ng-cloak>
    <div class="container account messages conversation">
        <div class="row">
            <div class="col-md-9 col-md-offset-3">
                <div class=" background-container">
                    <div class="title-block">
                        <h1 class="left-align back">
                            <span class="back-button">
                                <a href="javascript:history.back()">
                                    <i class="fa fa-chevron-left" aria-hidden="true"></i>
                                </a>
                            </span>
                            <span class="user-image"><img ng-src="{{conversation.viewModel.ReceiverImageUrl}}" alt="image" /> </span>
                            {{conversation.receiverUserName}}
                            @*<button class="user-notification"><i class="fa fa-bell" style="color:red"><span class="badge">3</span></i></button>*@
                            <a href="" class="notification" id="message_notification">
                                @*     <a href="/Message/Conversation?userId={{conversation.viewModel.ReceiverId}}" class="notification" id="message_notification">*@
                                <i class="fa fa-bell" style="color: #cf2d1e">
                                    <span class="badge" id="unread_count"></span>
                                </i>
                            </a>
                        </h1>
                        <div class="right-align">
                            <a href="/User/UserPublicProfile/{{conversation.viewModel.ReceiverId}}" class="default-link">View profile</a>
                        </div>

                    </div>

                    <div class="list-empty" ng-show="conversation.isConversationListEmpty">Your messages will be shown here.</div>
                    <div class="conversation-list" id="conversation-list" ng-hide="conversation.isConversationListEmpty">
                        <div ng-repeat="groupedMessage in conversation.groupedMessages" class="grouped">
                            <div class="date grouped-messages">
                                {{groupedMessage.date | amCalendar: null : conversation.calendarFormats}}
                            </div>
                            <div ng-repeat="message in groupedMessage.messages" ng-class="conversation.isAuthorsMessage(message) ? 'message-user' : 'message-recipient'">
                                @* <div ng-repeat="message in groupedMessage.messages" ng-class="conversation.isAuthorsMessage(message) ? 'message-user' : 'message-recipient'">*@

                                @*<div class="main-info">
                                        <a href="{{'/User/UserPublicProfile/' + message.AuthorId}}" class="user-image-name" target="_blank">
                                            <div class="user-name-msg">{{conversation.isAuthorsMessage(message) ? 'You' : message.AuthorUserName}}</div>
                                        </a>
                                        <div class="date">{{conversation.convertDate(message.DateCreated) | date: 'hh:mm a'}}</div>
                                    </div>*@
                                <div class="main-info">
                                    <a href="/User/UserPublicProfile/{{ conversation.isAuthorsMessage(message) ? angularConstants.Messages.SenderId : angularConstants.Messages.ReceiverId }}" class="user-image-name imgContent" target="_blank">
                                        @*<span class="user-image imgStart"><img src="{{ conversation.isAuthorsMessage(message) ? angularConstants.Messages.SenderImageUrl : angularConstants.Messages.ReceiverImageUrl }}" alt="image" /></span>*@
                                        <span class="user-image imgStart"><img src="~/Content/Img/profile-thumb.svg" alt="image" /></span>
                                        <div class="user-name-msg ng-binding margin">{{ conversation.isAuthorsMessage(message) ? angularConstants.Messages.SenderName : angularConstants.Messages.ReceiverName }}</div>
                                    </a>
                                    <div class="date ng-binding margin">{{ time }}</div>
                                </div>
                                <div class="message-text messageText">

                                    <div class="mymessgaeThumbnail">
                                        <a href="@HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority)/Content/MessageImages{{messageImage}}" target="_blank" class="mymessgaeimages" ng-repeat="messageImage in message.PathList">
                                            <span>
                                                <img src="~/Content/Img/profile-thumb.svg" alt="image" />
                                                @*<img ng-src="{{conversation.viewModel.messageUrlPath + messageImage}}" alt="image">*@
                                            </span>
                                        </a>
                                    </div>

                                    <div ng-show="!message.IsSystem" ng-bind-html="conversation.trustedHtml(message.Message)" class="text"></div>
                                    <div ng-show="message.IsSystem" ng-bind-html="conversation.replaceQuotes(message.Message)"></div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="type-message clearfix inputArea">
                        <div class="col-md-12">
                            @*col-md-offset-2*@
                            <form name="send" runat="server" class="form-conversation coversationSection" ng-submit="conversation.submitForm($event, send)" enctype="multipart/form-data">
                                @*<span class="user-image"><img ng-src="{{conversation.viewModel.AuthorImageUrl}}" alt="" /></span>*@
                                <div class="form-group">
                                    <textarea name="message" id="myTextarea" class="form-control" placeholder="Type your message..." ng-model="conversation.message" ng-maxlength="4000" ng-class="{'error-input': (send.message.$dirty || send.$submitted) && (send.message.$error.required || send.message.$error.maxlength)}" rows="3"></textarea>
                                    @*<textarea id="myTextarea" class="form-control" placeholder="Type your message..." ng-model="conversation.message" ng-maxlength="4000" ng-class="{'error-input': (send.message.$dirty || send.$submitted) && (send.message.$error.required || send.message.$error.maxlength)}" rows="3" style="position: absolute; left: -9999px;"></textarea>*@


                                    @*<input type="text" name="message" class="form-control textField" placeholder="Type your message..." ng-model="conversation.message" ng-maxlength="4000" ng-class="{'error-input': (send.message.$dirty || send.$submitted) && (send.message.$error.required || send.message.$error.maxlength)}" required>*@
                                    @*<textarea id="myTextarea"></textarea>*@
                                    <span class="error-msg" ng-show="(send.message.$dirty || send.$submitted) && send.message.$error.required">
                                        Required
                                    </span>
                                    <span class="error-msg" ng-show="(send.message.$dirty || send.$submitted) && send.message.$error.maxlength">
                                        Max length 4000
                                    </span>
                                </div>
                                <div class="chooseFileBtnSection">
                                    <input type="file" multiple name="file" accept=".png, .jpg, .jpeg .gif" class="form-control" file-upload ng-click="conversation.uploading()" />
                                    <button type="submit" class="btn btn-green">Send</button>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.tiny.cloud/1/bbqe4nbse6dy58ns697vxatdgs1zzp7c1p1gm2c05cqgthvf/tinymce/5/tinymce.min.js"></script>

<script>
    tinymce.init({
        menubar: false,
        statusbar: false,
        selector: "#myTextarea",
        plugins: "autoresize link image lists emoticons", 
        toolbar: "undo redo | bold italic | emoticons",
        autoresize_bottom_margin: 10,
        toolbar_sticky: true 
    });

</script>
@Scripts.Render("~/Scripts/Messages")
@Scripts.Render("~/Scripts/Libs/jquery")
<script src="~/Scripts/Libs/moment.js"></script>
<script>

    var angularConstants = {};
    angularConstants = {
        Messages: JSON.parse('@Html.Raw(HttpUtility.JavaScriptStringEncode(Json.Encode(Model)))')
    };

    $(document).ready(function () {
        $('#conversation-list').scrollTop($('#conversation-list')[0].scrollHeight);
        setInterval(function () {
            @*$.ajax({
                type: "GET",
                url: "@Url.Action("GetUnreadCount", "Message")",
                contentType: "application/json; charset=utf-8",
                data: { "userId": '@Model.ViewModel.ReceiverId' },
                dataType: "json",
                success: function (result) {
                    if (result > 0) {
                        if (!$("#conversation-list").scrollTop() + $("#conversation-list").innerHeight() >= $("#conversation-list")[0].scrollHeight) {
                            $("#unread_count").html(result);
                        }
                    }
                    else {
                        $("#unread_count").html("");
                    }
                }
            });*@


            $.ajax({
                type: "GET",
                url: "@Url.Action("GetUnreadMessages", "Message")",
                contentType: "application/json; charset=utf-8",
                data: { "userId": '@Model.ViewModel.ReceiverId' },
                success: function (result) {
                    console.log(result);
                    $.each(result.messagelist, function (i) {
                        ;
                        var dated = moment(result.messagelist[i].DateCreated);

                        // var dd = new Date(parseInt(result.messagelist[i].DateCreated));
                        var time = new Date(dated).getHours() + ':' + new Date(dated).getMinutes();
                        if (new Date(dated).getHours() >= 12) {
                            time = time + ' PM'
                        }
                        else {
                            time = time + ' AM'
                        }
                        var message = (result.messagelist[i].Message);
                        console.log(message);
                        var host = '@HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority)';
                    message.replace(/\\/g, "");
                        var imagesection = "";

                        if (result.messagelist[i].PathList != null || result.messagelist[i].PathList.length > 0) {
                            imagesection = imagesection + '<div class="mymessgaeThumbnail"> ';
                            $.each(result.messagelist[i].PathList, function (key, path) {
                                var fullpath = host + "/Content/MessageImages" + path;
                                imagesection = imagesection + ' <a href="' + fullpath + '" target="_blank" class="mymessgaeimages"><span><img src ="' + fullpath + '" class="imgfluid" alt="image" /></span></a>';
                            });

                            imagesection = imagesection + '</div> ';
                        }




                        var html =
                            '<div ng-repeat="groupedMessage in conversation.groupedMessages" class="grouped ng-scope">' +
                            '<div  class="ng-scope message-recipient"><div class="main-info" >' +
                            '<a href="/User/UserPublicProfile/' + result.messagelist[i].AuthorId + '"class="user-image-name margin" target="_blank" style="margin-top:10px;">' +
                            '<div class="user-name-msg ng-binding margin">' + result.messagelist[i].AuthorUserName + '</div></a>' +
                            '<div class="date ng-binding margin">' + time + '</div ></div > ' +
                            '<div class="message-text messageText"> ' +
                            imagesection+
                            ' <div ng-show="!' + result.messagelist[i].IsSystem + '"  class="text ng-binding newmsgcolor">' + message + '</div>' +
                            '<div ng-show="' + result.messagelist[i].IsSystem + '"  class="ng-binding ng-hide">' + message + '</div></div></div></div>'

                        if ($("#conversation-list").scrollTop() + $("#conversation-list").innerHeight() >= $("#conversation-list")[0].scrollHeight) {
                            $('#conversation-list').append(html);
                            $('#conversation-list').scrollTop($('#conversation-list')[0].scrollHeight);
                            $("#unread_count").html("");
                        }
                        else {
                            $('#conversation-list').append(html);
                            $("#unread_count").html("New");
                        }
                        //$('#conversation-list').scrollTop($('#conversation-list')[0].scrollHeight);

                    });
                }
            });
        }, 5000);


        $("#conversation-list").scroll(function () {
            if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                $("#unread_count").html("");
            }
        })

        $('#message_notification').click(function () {
            $('#conversation-list').scrollTop($('#conversation-list')[0].scrollHeight);
            $("#unread_count").html("");
            @*$.ajax({
                type: "GET",
                url: "@Url.Action("GetUnreadMessages", "Message")",
                contentType: "application/json; charset=utf-8",
                data: { "userId": '@Model.ViewModel.ReceiverId' },
                success: function (result) {
                    console.log(result);
                    $.each(result.messagelist, function (i) {
                        ;
                        var dated = moment(result.messagelist[i].DateCreated);

                        // var dd = new Date(parseInt(result.messagelist[i].DateCreated));
                        var time = new Date(dated).getHours() + ':' + new Date(dated).getMinutes();
                        if (new Date(dated).getHours() >= 12) {
                            time = time + ' PM'
                        }
                        else {
                            time = time + ' AM'
                        }
                        var message = (result.messagelist[i].Message);
                        message.replace(/\\/g, "");
                        var html =
                            '<div ng-repeat="groupedMessage in conversation.groupedMessages" class="grouped ng-scope">' +
                            '<div  class="ng-scope message-recipient"><div class="main-info" >' +
                            '<a href="/User/UserPublicProfile/' + result.messagelist[i].AuthorId + '" class="user-image-name" target="_blank">' +
                            '<div class="user-name-msg ng-binding">' + result.messagelist[i].AuthorUserName + '</div></a>' +
                            '<div class="date ng-binding" >' + time +'</div ></div > ' +
                            '<div class="message-text">' +
                            '<div ng-show="!' + result.messagelist[i].IsSystem + '"  class="text ng-binding">' + message + '</div>' +
                            '<div ng-show="' + result.messagelist[i].IsSystem + '"  class="ng-binding ng-hide">' + message + '</div></div></div></div>'
                        $('#conversation-list').append(html);
                        $("#unread_count").html("");
                        $('#conversation-list').scrollTop($('#conversation-list')[0].scrollHeight);

                    });
                }
            });*@
        })
    })
</script>