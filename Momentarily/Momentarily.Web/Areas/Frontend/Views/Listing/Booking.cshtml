@model Apeek.Common.IShape<Apeek.ViewModels.Models.GoodRequestViewModel>

@{
    ViewBag.Title = "My Bookings";
    Layout = "~/Areas/Frontend/Views/Shared/_AccountMenuLayout.cshtml";
}
<style>
    #ReturnConfirmModal .modal-body {
        position: relative;
        padding: 30px;
        text-align: center;
        background-color: #fff
    }

    #ReturnConfirmModal .modal-content {
    }

    #ReturnConfirmModal h4.modal-title {
        font-size: 30px;
        /*font-weight: bold;*/
        color: #575f62;
        font-family: Arial, Helvetica, sans-serif;
    }

    #ReturnConfirmModal h4.modal-title2 {
        font-size: 18px;
        color: #252323 !important;
    }

    #ReturnConfirmModal .close {
        position: absolute;
        right: 20px;
        top: 11px;
        opacity: 1;
        font-size: 40px;
        z-index: 11;
        color: #9f9f9f;
    }

    .ui-state-hover, .ui-widget-content .ui-state-hover, .ui-widget-header .ui-state-hover, .ui-state-focus, .ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus, .ui-button:hover, .ui-button:focus {
        border: 1px solid #cf2d1e !important;
        background: #cf2d1e !important;
        font-weight: bold !important;
        color: #fff !important;
    }



    .ui-state-active, .ui-widget-content .ui-state-active, .ui-widget-header .ui-state-active {
        border: 1px solid #cf2d1e;
        background: #cf2d1e !important;
        font-weight: normal;
        color: #fff;
    }

    .label-subscribed {
        color: #ffffff;
        font-weight: bold;
        border: none;
        background-color: #cf2d1e;
        border-radius: 3px;
        font-size: 11.998px;
        padding: 4px 12px;
    }
</style>
<div class="content" ng-controller="BookingRequestController as request" ng-cloak>

    <div class="container account booking-request">
        <div class="row">
            <div class="col-md-9 col-md-offset-3">
                <div class="request-container background-container">
                    <div class="title-block separated-block">
                        <h1 class="left-align back">
                            <span class="back-button">
                                <a href="javascript:history.back()">
                                    <i class="fa fa-chevron-left" aria-hidden="true"></i>
                                </a>
                            </span>
                            Booking request
                        </h1>

                        <div ng-show="request.item.CanRelease" class="link-block pull-right">
                            <div style="text-align: right;">
                                <a class="btn btn-green"
                                   href="@Url.Action("ReleaseItem", "Listing" , new {id=Model.ViewModel.Id})">
                                    Item Released
                                </a>
                            </div>
                        </div>

                        <div ng-show="request.item.CanConfirmReturn" class="link-block pull-right">
                            <div style="text-align: right;">
                                <button class="btn btn-green" id="updatefinalstatus" style="margin-left: 5px;">
                                    Update Final Status
                                </button>
                            </div>
                        </div>

                        <div ng-show="request.item.CanCancel" class="link-block">
                            <div style="text-align: right;">
                                <a class="btn"
                                   href="@Url.Action("CancelBooking", "Listing" , new {id=Model.ViewModel.Id})" ng-click="request.cancelRequest($event)">Cancel booking</a>
                            </div>
                        </div>
                        <div ng-show="request.item.CanStartDispute" class="link-block pull-right approve-decline">
                            <div>
                                <a href="@Url.Action("BookingDispute", "Listing" , new {id=Model.ViewModel.Id})" class="btn btn-red">
                                    Dispute
                                </a>
                            </div>
                        </div>
                        <div ng-show="request.item.CanReview" class="link-block pull-right">
                            <div style="text-align: right;">
                                <a class="btn btn-green"
                                   href="@Url.Action("BookingReview", "Listing" , new {id=Model.ViewModel.Id})">Review</a>
                            </div>
                        </div>
                        <div ng-show="request.isPending()" class="link-block approve-decline right-align">
                            @using (Html.BeginForm("ApproveBooking", "Listing", FormMethod.Post))
                            {
                                @Html.Hidden("Id", Model.ViewModel.Id)
                                @Html.Hidden("UserId", Model.ViewModel.UserId)
                                <button class="btn btn-green" type="submit">Approve request</button>
                                <a class="btn secondary-btn" href="@Url.Action("BookingDecline", "Listing" , new {id=Model.ViewModel.Id})">Decline request</a>
                            }
                        </div>
                        @*<div class="link-block pull-left approve-decline" ng-show="request.item.CanRefund">
                                <a class="black-link btn-refund-depo" href="@Url.Action("RefundSecurityDeposit", "Listing", new {id = Model.ViewModel.Id})">Refund security deposit</a>
                            </div>*@
                    </div>
                    <div ng-show="request.isDeclined()" class="alerts">
                        <div class="alert-info">You have declined booking requests</div>
                    </div>
                    @*<div ng-show="request.isNotresponded()" class="alerts">
                            <div class="alert-info">Not Responded booking requests</div>
                        </div>*@
                    <div ng-show="request.isApproved()" class="alerts">
                        <div class="alert-success">Awesome, you just approved a booking for {{request.item.UserName}}!</div>
                    </div>
                    <div ng-show="request.isCanceled()" class="alerts">
                        <div class="alert-info">
                            @*{{request.item.UserName}} has cancelled this booking request.*@
                            Booking request has been canceled.
                        </div>
                    </div>
                    <div ng-show="request.isDispute()" class="alert">
                        <div class="alert-error">Dispute started</div>
                    </div>
                    <div ng-show="request.isSeekerPaid()" class="alert">
                        <div class="alert-success">Borrower paid for booking</div>
                    </div>
                    <div ng-show="request.isRelease()" class="alert">
                        <div class="alert-success">Item Released</div>
                    </div>
                    <div ng-show="request.isReceived()" class="alert">
                        <div class="alert-success">Item received by borrower</div>
                    </div>
                    <div ng-show="request.isReturned()" class="alert">
                        <div class="alert-success">Item returned by borrower</div>
                    </div>
                    <div ng-show="request.isReturnedConfirm()" class="alert">
                        <div class="alert-success">Item Return Confirmed</div>
                    </div>

                    <div ng-show="request.isLate()" class="alert">
                        <div class="alert-error">Item Returned Late</div>
                    </div>
                    <div ng-show="request.isDamaged()" class="alert">
                        <div class="alert-error">Item Returned Damaged</div>
                    </div>
                    <div ng-show="request.isLateAndDamaged()" class="alert">
                        <div class="alert-error">Item returned Late and Damaged</div>
                    </div>



                    <div ng-show="request.isRefunded()" class="alerts">
                        <div class="alert-info">Your request has been refunded.</div>
                    </div>
                    @*<div class="block-img-request col-md-5">
                            <img src="{{request.item.GoodImageUrl}}" on-error-src="/Content/Img/error-bg.png" />
                        </div>*@
                    <div class="info-request">
                        <table>
                            <thead>
                                <tr>
                                    <th class="col-md-2"></th>
                                    <th class="col-md-5"></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Status</td>
                                    <td>{{request.item.StatusName}}</td>
                                </tr>
                                <tr>
                                    <td>Booking ID</td>
                                    <td>#{{request.item.Id}}</td>
                                </tr>
                                <tr>
                                    <td>Listing</td>
                                    <td>{{request.item.GoodName}}</td>

                                </tr>
                                <tr class="separated name">
                                    <td>Client</td>
                                    <td>
                                        <a target="_blank" href="@Url.Action("UserPublicProfile", "User" , new {id=Model.ViewModel.UserId})">{{request.item.UserName}}</a>
                                        <a href="@Url.Action("Conversation", "Message", new {userId = Model.ViewModel.UserId})" class="label-subscribed btn btn-primary" title="Send Message">
                                            <i class="fa fa-envelope" aria-hidden="true"></i>
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Rental Start Date</td>
                                    <td>{{request.convertToDate(request.item.StartDate) | date: 'MM/dd/yyyy'}}</td>
                                </tr>
                                <tr>
                                    <td>Rental Return Date</td>
                                    <td>{{request.convertToDate(request.item.EndDate) | date: 'MM/dd/yyyy'}}</td>
                                </tr>
                                <tr>
                                    <td>Rental Start Time</td>
                                    <td>{{request.item.StartTime}}</td>
                                </tr>
                                <tr>
                                    <td>Rental End Time</td>
                                    <td>{{request.item.EndTime}}</td>
                                </tr>
                                <tr>
                                    <td>Price:</td>
                                    <td>${{request.item.DaysCost}}</td>
                                </tr>
                                <tr>
                                    <td>Service Fee (7%):</td>
                                    <td>${{request.item.SharerServiceFeeCost}}</td>
                                </tr>
                                <tr>
                                    <td>Charity:</td>
                                    <td>${{request.item.SharerCharityCost}}</td>
                                </tr>
                                <tr>
                                    <td>Discount:</td>
                                    <td>${{request.item.CouponDiscount | number: 2}}</td>
                                </tr>
                                @*<tr>
                                        <td>Discount Amount:</td>
                                        <td>${{request.item.CouponDiscount | number: 2}}</td>
                                    </tr>*@

                                <tr class="separated total">
                                    <td>Total:</td>
                                    <td>${{request.item.SharerCost-request.item.CouponDiscount  | number: 2}}</td>
                                </tr>
                                <tr ng-show="request.showContactInfo()">
                                    <td>User Email:</td>
                                    <td>{{request.item.UserEmail}}</td>
                                </tr>
                                <tr ng-show="request.showContactInfo()" class="separated total">
                                    <td>User Phone:</td>
                                    <td><a href="tel:{{request.item.UserPhone}}">{{request.item.UserPhone}}</a></td>
                                </tr>
                                <tr ng-if="request.item.ShippingAddress && request.item.ApplyForDelivery">
                                    <td>Delivery Address</td>
                                    <td>{{request.item.ShippingAddress}}</td>
                                </tr>
                                <tr ng-if="request.item.ShippingDistance > 0 && request.item.ApplyForDelivery">
                                    <td>Delivery Charges:</td>
                                    <td>
                                        $<span ng-bind="request.item.DiliveryCost"></span>
                                    </td>
                                </tr>
                                <tr ng-if="request.item.ShippingDistance > 0 && request.item.ApplyForDelivery">
                                    <td>Distance</td>
                                    <td ng-bind="request.item.ShippingDistance+' '+'miles'"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div style="padding: 10px 0px 10px;">
                        <div id="startDelivery" style="display: none; padding: 10px 0px 10px;">
                            <a href="@Url.Action("Location", "Listing", new {id = Model.ViewModel.Id})" class="btn btn-red">
                                Start Delivery
                            </a>
                        </div>
                        <div id="trackLocation" style="display: none; padding: 10px 0px 10px;">
                            <a href="@Url.Action("Location", "Listing", new {id = Model.ViewModel.Id})" class="btn btn-red">
                                Track Location
                            </a>
                        </div>
                        <div id="returntrackLocation" style="display:none;padding: 10px 0px 10px;">
                            <a href="@Url.Action("Return", "Listing", new {id = Model.ViewModel.Id})" class="btn btn-red">
                                Track Location
                            </a>
                        </div>
                        <div id="rideTimeCompleted" style="display: none; padding: 10px 0px 10px;">
                            Rental time has been completed.
                        </div>
                        <div id="deliveryNotStarted" style="display: none; padding: 10px 0px 10px;">
                            Delivery time has not started yet.
                        </div>
                        <div id="startReturn" style="display:none;padding: 10px 0px 10px;">
                            <a href="@Url.Action("Return", "Listing", new {id = Model.ViewModel.Id})" class="btn btn-red">
                                Start Pickup
                            </a>
                        </div>
                        <div id="returnNotStarted" style="display:none;padding: 10px 0px 10px;">
                            Return time has not started yet.
                        </div>
                        <div id="rentSuccessfully" style="display:none;padding: 10px 0px 10px;">
                            Rental has been successfully completed.
                        </div>
                    </div>

                    <div class="list-map">
                        <apeek-map items="[request.item]"
                                   search-location="request.item.ShippingAddress || request.item.Location"
                                   @*show-routes="true"*@
                                   offset="false"
                                   distance-and-route-from-current-location="false">
                        </apeek-map>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="ReturnConfirmModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                        <h4 class="modal-title" id="myModalLabel">Final Confirmation</h4>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("FinalFeedback", "Listing", FormMethod.Post, new { @id = "id_feedback" }))
                        {
                            @Html.Partial("_FinalFeedback", Model.ViewModel.finalFeedbackVM)
                        }
                    </div>
                    @*<div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>*@
                </div>
            </div>
        </div>

    </div>
</div>

@Scripts.Render("~/Scripts/Listing")
<link href="~/Content/ToastMessage/toastr.css" rel="stylesheet" />
<script src="~/Content/ToastMessage/toastr.min.js"></script>
<script>
    var angularConstants = {
        BookingRequest: JSON.parse('@Html.Raw(HttpUtility.JavaScriptStringEncode(Json.Encode(Model)))')
    };


    $(document).ready(function () {
        $('#updatefinalstatus').click(function () {
            $('#ReturnConfirmModal').modal();
        });
    });

</script>
<script>
    function isTodayAndWithin30Min(startDate, startTime, endDate, endTime) {
        var startDateTime = parseCombinedDateTime(startDate, startTime);
        var endDateTime = parseCombinedDateTime(endDate, endTime);
        var now = new Date();
        if (now >= startDateTime && now <= endDateTime) {
            return true;
        } else {
            return false;
        }
    };
    var startDate = "@Model.ViewModel.StartDate";
    var startTime = "@Model.ViewModel.StartTime";
    var endDate = "@Model.ViewModel.EndDate";
    var endTime = "@Model.ViewModel.EndTime";
    var applyForDelivery = "@Model.ViewModel.ApplyForDelivery";
    var returnConfirm = "@Model.ViewModel.ReturnConfirm";
    var deliveryConfirm = "@Model.ViewModel.ConfirmDelivery";

    var todaysDate = new Date();
    var endDateTime = parseCombinedDateTime(endDate, endTime);
    var startDateTime = parseCombinedDateTime(startDate, startTime);

    if (deliveryConfirm === "False")
    {
        if (todaysDate <= endDateTime && todaysDate >= startDateTime)
        {
            if (applyForDelivery === "True")
            {
                document.getElementById("startDelivery").style.display = "block";
            }
            else if (applyForDelivery === "False")
            {
                document.getElementById("trackLocation").style.display = "block";
            }
        }
        else
        {
            if (todaysDate > endDateTime) {
                document.getElementById("rideTimeCompleted").style.display = "block";
            } else {
                document.getElementById("deliveryNotStarted").style.display = "block";
            }
        }
    }
    else if (deliveryConfirm === "True")
    {
        var yesterday = getYesterday();

        const twentyFourHoursBeforeEndDateTime = new Date(endDateTime.getTime() - (24 * 60 * 60 * 1000));

        console.log(twentyFourHoursBeforeEndDateTime);

        if (todaysDate <= endDateTime && todaysDate >= startDateTime && todaysDate >= twentyFourHoursBeforeEndDateTime) {
            if (applyForDelivery === "True" && returnConfirm === "False") {
                document.getElementById("startReturn").style.display = "block";
            }
            else if (returnConfirm === "False" && applyForDelivery === "False") {
                document.getElementById("returntrackLocation").style.display = "block";
            }
            else if (returnConfirm === "True") {
                document.getElementById("rentSuccessfully").style.display = "block";
            }
        } 
        else
        {
            if (todaysDate > endDateTime) {
                document.getElementById("rideTimeCompleted").style.display = "block";
            }
            else {
                document.getElementById("returnNotStarted").style.display = "block";
            }
        }
    }

    function getYesterday() {
        let d = new Date();
        d.setDate(d.getDate() - 1);
        return d;
    }

    function parseCombinedDateTime(startDate, startTime) {
        var startDateParts = startDate.split('/');
        var startTimeParts = startTime.split(':');
        var month = parseInt(startDateParts[0]) - 1;
        var day = parseInt(startDateParts[1]);
        var year = parseInt(startDateParts[2]);
        var hours = parseInt(startTimeParts[0]);
        var minutes = parseInt(startTimeParts[1]);
        if (startTime.includes('AM') && hours === 12) {
            hours = 0;
        } else if (startTime.includes('PM') && hours !== 12) {
            hours += 12;
        }
        return new Date(year, month, day, hours, minutes);
    }
</script>


