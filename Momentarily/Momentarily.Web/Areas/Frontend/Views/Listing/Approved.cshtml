@using Momentarily.Common.Definitions
@model Momentarily.ViewModels.Models.CreateMomentarilyItemViewModel

@{
    Layout = "~/Areas/Frontend/Views/Shared/_AccountMenuLayout.cshtml";
}
<link href="~/Content/CustomCssFiles/ListingPage.css" rel="stylesheet" />
<div class="content" data-ng-controller="ListingEditController as listingEditController">
    <div class="container account item">
        <div class="container">
            <div class="row">
                <div class="col-md-9 col-md-offset-3">

                    <div class="listing-container createlist">
                        <div class="title-block separated-block with-buttons">
                            <h1 class="left-align back">
                                <span class="back-button">


                                    <a>
                                        <i class="fa fa-chevron-left" aria-hidden="true"></i>
                                    </a>
                                </span>
                                <span data-ng-bind="listingEditController.itemExists() ? 'Un Approved item' : 'Add New Listing'"></span>
                            </h1>
                        </div>

                        <div style="display: none" class="list-empty">You have no item listed!</div>
                        <form id="createItemForms" name="approve" class="item-form form-horizontal" data-ng-submit="listingEditController.submitForm($event, Approve)" action="Approved" method="post" novalidate>

                            <input type="hidden" name="Id" value="{{listingEditController.item.Id}}" />
                            @Html.HiddenFor(x => x.Item.Id)
                            @for (var i = 0; i < Model.Item.GoodPropertyValues.Count; i++)
                            {
                                <input type="hidden" name="GoodPropertyValues[@i].Key" value='@Model.Item.GoodPropertyValues.Keys.ElementAt(i)' />
                                <input type="hidden" name="GoodPropertyValues[@i].Value.Id" value='@Model.Item.GoodPropertyValues.Values.ElementAt(i).Id' />
                                <input type="hidden" name="GoodPropertyValues[@i].Value.Value" value='{{@String.Format("listingEditController.item.GoodPropertyValues.{0}.Value", Model.Item.GoodPropertyValues.Keys.ElementAt(i))}}' />
                                <input type="hidden" name="GoodPropertyValues[@i].Value.PropertyValueDefinitionId" value='{{@String.Format("listingEditController.item.GoodPropertyValues.{0}.PropertyValueDefinitionId", Model.Item.GoodPropertyValues.Keys.ElementAt(i))}}' />
                            }
                            <div class="form-group">
                                <label for="name" class="col-md-2">Name</label>
                                <div class="col-md-5">
                                    <input name="Name"
                                           data-ng-model="listingEditController.item.Name"
                                           class="form-control account-input disabled"
                                           data-ng-class="{'error-input': (create.Name.$dirty || create.$submitted) && (create.Name.$error.required || create.Name.$error.maxlength)}"
                                           id="name"
                                           placeholder="Enter name"
                                           data-ng-maxlength="100"
                                           required disabled>
                                </div>

                                <span class="error-msg"
                                      data-ng-show="(create.Name.$dirty || create.$submitted) && create.Name.$error.required">
                                    Required
                                </span>
                                <span class="error-msg"
                                      data-ng-show="(create.Name.$dirty || create.$submitted) && create.Name.$error.maxlength">
                                    Max length is 100 symbols
                                </span>
                            </div>

                            <div class="form-group">
                                <label for="description" class="col-md-2">Description</label>
                                <div class="col-md-5">
                                    <textarea name="Description"
                                              data-ng-model="listingEditController.item.Description"
                                              class="form-control account-input"
                                              data-ng-class="{'error-input': (create.Description.$dirty || create.$submitted) && (create.Description.$error.required || create.Description.$error.maxlength)}"
                                              id="description"
                                              placeholder="Enter description"
                                              data-ng-maxlength="500"
                                              required disabled></textarea>
                                </div>
                                <span class="error-msg"
                                      data-ng-show="(create.Description.$dirty || create.$submitted) && create.Description.$error.required">
                                    Required
                                </span>
                                <span class="error-msg"
                                      data-ng-show="(create.Name.$dirty || create.$submitted) && create.Description.$error.maxlength">
                                    Max length is 500 symbols
                                </span>
                            </div>


                            <div class="form-group photos-form-group">
                                <multiply-upload  count-upload="5" value-images="listingEditController.arrayValueImages" exist-images="listingEditController.images"></multiply-upload>
                            
                            </div>


                            <div class="text-right">
                                <button class="btn btn-green" type="button" onclick="javascript:document.getElementById('createItemForms').submit()">Approve</button>
                                <a onclick="cancelfunc()" class="btn secondary-btn" id="cancelData" data-ng-hide="listingEditController.itemExists()">Cancel</a>
                                <i class="fa fa-spinner loading-animate"
                                   data-ng-show="listingEditController.deleting"></i>
                                <a class="btn secondary-btn"
                                   data-ng-show="listingEditController.itemExists()"
                                   data-ng-click="listingEditController.deleteItem()">Delete this item</a>
                            </div>


                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .itemPhotosListing span.message-info {
        text-align: left;
        display: block;
    }

    .rentPeriodSection input {
        position: relative;
        top: 2px;
    }

    .rentPeriodSection label {
        margin-right: 10px;
    }

    #divLoading {
        display: none !important;
    }
</style>

@Scripts.Render("~/Scripts/Listing")
@Scripts.Render("~/Scripts/Libs/jquery")
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/css/select2.min.css" rel="stylesheet" />

<script src="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/js/select2.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
<script>

    $(document).ready(function () {
        $('#StartTime').timepicker({

        });
    });
   
    debugger

    var angularConstants = {
        CreateItem: {
            momentarilyItemDepositKey: '@MomentarilyItemProperties.MomentarilyItemDeposit',
            item: JSON.parse('@Html.Raw(HttpUtility.JavaScriptStringEncode(Json.Encode(Model.Item)))'),
            types: JSON.parse('@Html.Raw(Json.Encode(Model.Types))'),
            categories: JSON.parse('@Html.Raw(Json.Encode(Model.Categories))')
        },
        createAction: '@Url.Action("Create", "Listing")',
        editAction: '@Url.Action("Edit", "Listing")'
    };

    function cancelfunc() {
        var userConfirms = confirm("Are you sure you want to cancel?");
        if (userConfirms) {
            window.location.href = "/Listing/";
        }
    }

       if ('@ViewBag.Requires' != '') {
           alert("@ViewBag.Requires");

        }


    document.addEventListener("keydown", KeyCheck);
    function KeyCheck(event) {
        var KeyID = event.keyCode;
        switch (KeyID) {
            case 8:
                $(".error-priceDay").css("display", "none")
                $(".error-priceWeek").css("display", "none")
                break;
            case 46:
                break;
            default:
                break;
        }
    }

    $(document).on('keypress', '#price', function (e) {
        var currentValue = String.fromCharCode(e.which);
        var finalValue = $(this).val() + currentValue;
        if (finalValue > 15000 && e.keyCode !== 46 && e.keyCode !== 8) {
            e.preventDefault();
            $(".error-priceDay").css("display", "block").fadeOut(5000)
        }
        else {
            $(".error-priceDay").css("display", "none")
        }
    });

    $(document).on('keypress', '#pricePerWeek', function (e) {
        var currentValue = String.fromCharCode(e.which);
        var finalValue = $(this).val() + currentValue;
        if (finalValue > 15000) {
            e.preventDefault();
            $(".error-priceWeek").css("display", "block").fadeOut(5000)
        }
        else {
            $(".error-priceWeek").css("display", "none")
        }
    });
</script>


