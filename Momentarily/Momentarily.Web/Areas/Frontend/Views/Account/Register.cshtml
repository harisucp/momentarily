@model Apeek.Common.IShape<Momentarily.ViewModels.Models.MomentarilyRegisterModel>
@{
    Layout = "~/Areas/Frontend/Views/Shared/_Layout.cshtml";
}
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/js/select2.js"></script>*@
@*<script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js" integrity="sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd" crossorigin="anonymous"></script>*@
<script src="https://www.google.com/recaptcha/api.js"></script>

<div class="content mainClass" data-ng-controller="RegisterController as account">
    <div class="container-full">
        <div class="row">
            <div id="box" class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-12">
                <div class="sign-in-page">
                    @if (!Model.ViewModel.IsExternal)
                    {
                        {
                            <div class="title-block separated-block">
                                <h1>Join <b>momentarily</b> Today!</h1>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="title-block3">
                            <h1 style="text-transform:uppercase">
                                ALMOST THERE! <br />
                                Please complete the information below to sign up.
                            </h1>
                        </div>
                    }
                    <div data-ng-class="@Model.ViewModel.IsExternal == true ? '' : 'separated-block'">
                        <div class="form-group">
                            @if (!Model.ViewModel.IsExternal)
                            {
                                <div class="separated-block">
                                    <div class="form-group">
                                        <p class="method">Select one of the following methods</p>
                                    </div>
                                    <div class="form-group">
                                        <button type="button" onclick="location.href='@Url.Action("FacebookSignUp","Account")'" class="btn btn-blue form-control"><i class="fa fa-facebook"></i> Sign Up with Facebook </button>
                                    </div>
                                    <div class="form-group">
                                        <button type="button" onclick="location.href='@Url.Action("GoogleSignUp", "Account")'" class="btn btn-white form-control"><img src="~/Content/Img/googlelogo.png" alt="image"> Sign Up with Google </button>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div>
                                    <div class="form-group">
                                        <p class="method">Please review and provide any missing information to complete signing up.</p>
                                    </div>
                                </div>
                            }
                            <div class="separated-block_1">
                                @using (Html.BeginForm())
                                {
                                    if (!Model.ViewModel.IsExternal)
                                    {
                                        <div class="form-group">
                                            <p class="signupoption">Or sign up using your e-mail address</p>
                                        </div>
                                    }

                                    if (Model.ViewModel.IsExternal)
                                    {
                                        <div class="form-group">
                                            <label for="InputEmail">E-mail Address</label>
                                            @Html.TextBoxFor(m => m.ViewModel.Email, new { @class = "form-control", @type = "email",@readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.ViewModel.Email, null, new { @class = "error-labels" })
                                        </div>
                                        <div class="form-group">
                                            <label for="InputEmail">First Name</label>
                                            @Html.TextBoxFor(m => m.ViewModel.FirstName, new { @class = "form-control", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.ViewModel.FirstName, null, new { @class = "error-labels" })
                                        </div>
                                        <div class="form-group">
                                            <label for="InputEmail">Last Name</label>
                                            @Html.HiddenFor(m => m.ViewModel.IsExternal)
                                            @Html.HiddenFor(m => m.ViewModel.GoogleId) @Html.HiddenFor(m => m.ViewModel.FacebookId)
                                            @Html.TextBoxFor(m => m.ViewModel.LastName, new { @class = "form-control", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.ViewModel.LastName, null, new { @class = "error-labels" })
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            <label for="InputEmail">E-mail Address</label>
                                            @Html.TextBoxFor(m => m.ViewModel.Email, new { @class = "form-control", @type = "email" })
                                            @Html.ValidationMessageFor(m => m.ViewModel.Email, null, new { @class = "error-labels" })
                                        </div>
                                        <div class="form-group">
                                            <label for="InputEmail">First Name</label>
                                            @Html.TextBoxFor(m => m.ViewModel.FirstName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ViewModel.FirstName, null, new { @class = "error-labels" })
                                        </div>
                                        <div class="form-group">
                                            <label for="InputEmail">Last Name</label>
                                            @Html.HiddenFor(m => m.ViewModel.IsExternal)
                                            @Html.HiddenFor(m => m.ViewModel.GoogleId) @Html.HiddenFor(m => m.ViewModel.FacebookId)
                                            @Html.TextBoxFor(m => m.ViewModel.LastName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ViewModel.LastName, null, new { @class = "error-labels" })
                                        </div>
                                    }
                                    <div class="form-group">
                                        <label for="InputEmail">Select Country</label>
                                        @* @Html.DropDownList("ViewModel.CountryId", (IEnumerable<SelectListItem>)ViewBag.Countries, null, new { @class = "form-control" })*@
                                        @Html.DropDownListFor(n => n.ViewModel.CountryId, new SelectList(ViewBag.Countries, "Value", "Text", Model.ViewModel.CountryId), "", new { @class = "form-control" })

                                        @Html.ValidationMessageFor(m => m.ViewModel.CountryId, null, new { @class = "error-labels" })
                                        @*@Html.HiddenFor(m => m.ViewModel.CountryId)*@

                                    </div>


                                    <div class="form-group">
                                        <label for="InputEmail">Phone Number</label>
                                        <div class="row">
                                            <div class="col-md-12" style="display: inline-flex;width: 100% !important;">

                                                <span class="col-md-1" id="countrycodespan" style="background: #cecece;padding-top: 8px;width: auto;" >+@Model.ViewModel.CountryId</span>
                                                @Html.TextBoxFor(m => m.ViewModel.PhoneNumber, new { @class = "form-control col-md-10", @autocomplete = "off", @pattern = "[1-9]{1}[0-9]{9}", @maxlength = "10" })

                                            </div>
                                        </div>
                                        <span id="errmsg"></span>
                                        @Html.ValidationMessageFor(m => m.ViewModel.PhoneNumber, null, new { @class = "error-labels" })
                                    </div>

                                    //if (!Model.ViewModel.IsExternal)
                                    //{

                                    <div class="form-group">
                                        <label for="InputPassword">Create Password</label>
                                        <span class="right-align">Minimum 6 Characters</span>
                                        <div class="inputContainer">
                                            @Html.PasswordFor(m => m.ViewModel.Password, new { @class = "form-control pswd", @id = "Password" })
                                            <a class="btnShowHide" id="btnShowHide" onclick="showHideFunctionality()">SHOW</a>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ViewModel.Password, null, new { @class = "error-labels" })
                                    </div>
                                    <div class="form-group">
                                        <label for="InputPasswordRepeat">Confirm Password</label>
                                        @Html.PasswordFor(m => m.ViewModel.ConfirmPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.ViewModel.ConfirmPassword, null, new { @class = "error-labels" })
                                    </div>
                                    @*}*@
                                    <div class="form-group birthdayddl">
                                        <label for="ViewModel.DateOfBirthday">Birthday</label>
                                        <span class="right-align">To sign up, you must be 18 or older.</span>
                                        @Html.HiddenFor(m => m.ViewModel.DateOfBirthday, new { @class = "dateOfBirth" })
                                        @Html.ValidationMessageFor(m => m.ViewModel.DateOfBirthday, null, new { @class = "error-labels" })
                                    </div>
                                    <div class="form-group">
                                        @Html.HiddenFor(m => m.ViewModel.IgnoreMarketingEmails, Model.ViewModel.IgnoreMarketingEmails)
                                        <div class="regForm">
                                            <label class="checkbox">
                                                <input type="checkbox" id="setmarketingmail" checked="@Model.ViewModel.IgnoreMarketingEmails">
                                                <span class="primary"></span>
                                            </label>
                                            <span class="checkActive">
                                                I don’t want to receive marketing messages from <b>momentarily</b>.
                                                I can also opt out of receiving these at any time in my account settings.
                                            </span>
                                        </div>
                                    </div>
                                    if (!Model.ViewModel.IsExternal)
                                    {
                                        <div class="form-group">
                                            <span class="input-information">
                                                By joining <b>momentarily</b>, you agree to our
                                                <a href='@Url.Action("Terms", "Home")' class="link-red">Terms and Conditions</a> and
                                                <a href='@Url.Action("PrivacyPolicy", "Home")' class="link-red">Privacy Policy</a>
                                            </span>
                                        </div>
                                    }
                                    if (!Model.ViewModel.IsExternal)
                                    {
                                        <div class="form-group">
                                            <div class="g-recaptcha" data-sitekey="@ViewBag.SiteKey"></div>
                                            <div class="link-red" id="errorRecaptcha">
                                                @Html.ValidationMessageFor(m => m.ViewModel.RecaptchaMessage, null, new { @class = "link-red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <button type="submit" id="save" class="btn btn-red form-control"> Sign Up</button>

                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            <button type="submit" id="save" value="register" name="submit" class="btn btn-red form-control">Complete Sign Up</button>
                                        </div>
                                    }
                                    if (Model.ViewModel.IsExternal)
                                    {
                                        <div class="form-group">
                                            <span class="input-information">
                                                By joining <b>momentarily</b>, you agree to our
                                                <a href='@Url.Action("Terms", "Home")' class="link-red">Terms and Conditions</a> and
                                                <a href='@Url.Action("PrivacyPolicy", "Home")' class="link-red">Privacy Policy</a>
                                            </span>
                                        </div>
                                    }
                                    <div id="myModal" class="modal fade" role="dialog">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div>
                                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                </div>
                                                <div class="modal-body">
                                                    <h4 class="modal-title">WE'RE SORRY!</h4>
                                                    <h4 class="modal-title2">To sign up, you must be 18 or older.</h4>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    @if (!Model.ViewModel.IsExternal)
                    {
                        <div class="hr" id="hr"></div>
                        <div class="form-group">
                            <p class="signupoption">Already have an account with <b>momentarily</b>? <a href='@Url.Action("Login", "Account")'>Log In</a></p>
                        </div>
                    }
                    else
                    {
                        <div class="hr" id="hr"></div>
                        <div class="form-group">
                            <p class="signupoption">Information provided came from Google</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/Scripts/Account")
@Scripts.Render("~/Scripts/Libs/jquery")
@Scripts.Render("~/Scripts/Account/jquery-date-dropdowns-min")
@Scripts.Render("~/Scripts/Account/Select2")
@Scripts.Render("~/Scripts/Libs/Bootsrap3.4.1")

<style>
    #errmsg {
        color: #A63232;
        font-size: 11px;
    }
</style>
<script>

    $(document).ready(function () {
        var dob = '@Model.ViewModel.DateOfBirthday';
        if (dob == '01/01/01 12:00:00 AM') {
            $('#ViewModel_DateOfBirthday').val('');

        }
        else {
            $('#ViewModel_DateOfBirthday').val(dob);
        }
        $('#ViewModel_FirstName').keyup(function () {
            $('#ViewModel_FirstName').css('textTransform', 'capitalize');
        });
        $('#ViewModel_LastName').keyup(function () {
            $('#ViewModel_LastName').css('textTransform', 'capitalize');
        });

        $('#ViewModel_CountryId').change(function () {
            var value = $('#ViewModel_CountryId').val();
            $('#countrycodespan').html('+' + value)
        });

        $("#ViewModel_FirstName").keypress(function (e) {
            var key = e.keyCode;
            if (key >= 48 && key <= 57) {
                e.preventDefault();
            }
        });
        $("#ViewModel_LastName").keypress(function (e) {
            var key = e.keyCode;
            if (key >= 48 && key <= 57) {
                e.preventDefault();
            }
        });

        $("#ViewModel_PhoneNumber").keypress(function (e) {

            //if the letter is not digit then display error and don't type anything
            var lengthPhone = e.target.value.length;
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                //display error message
                $("#errmsg").html("Please Enter Digits Only").show().fadeOut(3000);
                return false;
            }
        });

            if ("@Model.ViewModel.IsExternal" == "True") {
                $('#box').removeClass("col-lg-4");
                $('#box').removeClass("col-lg-offset-4");
                $('#box').removeClass("col-md-6");
                $('#box').removeClass("col-md-offset-3");
                $('#box').removeClass("col-sm-12");
                $('#box').addClass("col-lg-5");
                $('#box').addClass("col-lg-offset-3");
                $('#box').addClass("widebox");
            }
            var date = new Date($("#ViewModel_DateOfBirthday").val());
            var currentdate = new Date();
            if (currentdate.getFullYear() - date.getFullYear() < 18) {
                $('#myModal').modal('show');
        }

            $("#ViewModel_DateOfBirthday").dateDropdowns({
                submitFormat: "mm/dd/yyyy",
                displayFormat: "mdy",
                minAge: 18,
                background: 'Red'
            });
            $(".input-validation-error").css('border', 'solid 1px #A63232');
            if ($(".date-dropdowns").siblings(".error-labels").text() != "") {
                $(".day").css('border', 'solid 1px #A63232');
                $(".month").css('border', 'solid 1px #A63232');
                $(".year").css('border', 'solid 1px #A63232');
            }
        $('.month').change(function () {
                localStorage.setItem("month", $('.month option:selected').val());
                $(this).find('option').css("background-color", "");
                $(this).find('option:selected').css("background-color", "#9b9b9bba");
                $(this).find('option span').remove();
                if ($(this).find('option:selected').text().toLowerCase() == 'january')
                $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'february')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&ensp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'march')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&emsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'april')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&emsp;&ensp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'may')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'june')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&emsp;&ensp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'july')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'august')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&ensp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'september')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&ensp;&ensp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'october')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'november')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'december')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&ensp;&nbsp;&#10003;</span>');
                else if ($(this).find('option:selected').text().toLowerCase() == 'month')
                    $(this).find('option:selected').append('<span>&emsp;&emsp;&emsp;&emsp;&emsp;&#10003;</span>');
                if ($('.month option:selected').val() == '') {
                    $('.month option:selected').css("color", "#938e8e");
                    $('.month').css("opacity", "1");
                }
                else {
                    $('.month option:first').css("color", "#b4b1b1");
                    $('.month').css("opacity", "1");
                }
            });
            $('.day').change(function () {
                localStorage.setItem("day", $('.day option:selected').val());
                $(this).find('option span.check').remove();
                var length = $('.day option:selected').html().length;
                if (length == 1) {
                    $(this).find('option:selected').append('<span class="check">&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; &#10003;</span>');
                }
                if (length== 2) {
                    $(this).find('option:selected').append('<span class="check">&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&ensp; &#10003;</span>');
                }
                if (length == 3) {
                    $(this).find('option:selected').append('<span class="check">&emsp;&emsp;&emsp;&emsp;&emsp;&ensp;&nbsp; &#10003;</span>');
                }
                $(this).find('option').css("background-color", "");
                $(this).find('option:selected').css("background-color", "#9b9b9bba");
                if ($('.day option:selected').val() == '') {
                    $('.day option:selected').css("color", "#938e8e");
                    $('.day').css("opacity", "1");
                }
                else {
                    $('.day option:first').css("color", "#b4b1b1");
                    $('.day').css("opacity", "1");
                }
            });
            $('.year').change(function () {
                localStorage.setItem("year", $('.year option:selected').val());
                $(this).find('option span.check').remove();
                $(this).find('option:selected').append('<span class="check">&emsp;&emsp;&emsp;&emsp;&emsp;&ensp;&nbsp;&#10003;</span>');
                $(this).find('option').css("background-color", "");
                $(this).find('option:selected').css("background-color", "#9b9b9bba");
                if ($('.year option:selected').val() == '') {
                    $('.year option:selected').css("color", "#938e8e");
                    $('.year').css("opacity", "1");
                }
                else {
                    $('.year option:first').css("color", "#b4b1b1");
                    $('.year').css("opacity", "1");
                }
            });




            var hidden = document.getElementById("ViewModel_IgnoreMarketingEmails");
            $('#setmarketingmail').change(function () {
                if (hidden.value == "False" || hidden.value == "false") {
                    hidden.value = true;
                }
                else {
                    hidden.value = false;
                }
            });
            $('#Password').val("@TempData["password"]");
        $('#ViewModel_ConfirmPassword').val("@TempData["confirm"]");
        if ("@TempData["date"]" == "empty") {
                localStorage.setItem("day", '');
                localStorage.setItem("month",'');
                localStorage.setItem("year", '');
                $('.dateOfBirth').removeAttr("value");
        }
        var localday = localStorage.getItem("day");
        var localmonth = localStorage.getItem("month");
        var localyear = localStorage.getItem("year");

        $("select.year").val(localyear);
        if (localday == '') { $("select.day")[0].selectedIndex = 0; } else { $(".day option[value='" + localday + "']").prop('selected', 'selected'); }
        if (localmonth == '') { $("select.month")[0].selectedIndex = 0; } else { $(".month option[value='" + localmonth + "']").prop('selected', 'selected');}
        if (localyear == '') { $("select.year")[0].selectedIndex = 0; } else { $(".year option[value='" + localyear + "']").prop('selected', 'selected'); }
        //if (localyear == '') { $("select.year")[0].selectedIndex = 0; } else { $(".year option[value='" + localyear + "']").attr('selected', 'selected'); }
        //if (localyear == '') { $("select.year")[0].selectedIndex = 0; } else { $(".year option[value='" + localyear + "']").attr('selected', true); }
        ////$(".day option[value='" + localday + "']").attr('selected', 'selected');
        //$(".month option[value='" + localmonth + "']").attr('selected', 'selected');
        //$(".year option[value='" + localyear + "']").attr('selected', 'selected');
        // $("select.year")[0].selectedIndex = 0;
        //$(".day option[value='" + localday + "']").prop('selected', 'selected');
        //$(".month option[value='" + localmonth + "']").prop('selected', 'selected');
        //$(".year option[value='" + localyear + "']").prop('selected', 'selected');
        if ($('.day option:selected').val() == '' || $('.month option:selected').val() == '' || $('.year option:selected').val() == '') {
            $("#ViewModel_DateOfBirthday").val('');
        }
    })
</script>