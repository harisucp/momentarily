@using Apeek.Common
@using Apeek.Common.Controllers
@using Apeek.Common.Logger
@using Apeek.Web.Framework.Mvc;
  
@model Apeek.ViewModels.Models.PersonViewModel

@{Layout = null;}


@Html.HiddenFor(m => m.Person.Id)


@if (!Shape.Addresses.Any())
{
    //TODO: Remove this logging when issue wil be fixed
    Ioc.Get<IDbLogger>().LogError(LogSource.View, "When rendering PersonInfo page the address is null: {0}", Shape.ToString());
}



@Html.HiddenFor(m => m.Addresses[0].Id)
<input type="hidden" name="Addresses[0].LocationId" value="@Shape.Addresses[0].LocationId" />


<!--

@Html.CheckBoxFor(m => m.Person.IsCompany)
<label id="isCompany" style="display:inline;margin:0px;">@t("Это компания?")</label><span> (Более одного сотрудника)</span>
-->

<label>@t("Город")<span class="required">*</span></label>

@Html.DropDownListFor(m => m.Addresses[0].LocationLang.Name, new SelectList(ContextService.IndexLocations, Shape.Addresses[0].LocationLang.Name))
@Html.TValidationMessageFor(m => m.Addresses[0].LocationLang.Name, t, new {@class = "error", id = "city_error"})
@if (Shape.PageName == PageName.UserInfo.ToString())
{
     <label>@t("Район или адрес")</label>
    @Html.TextBoxFor(m => m.Addresses[0].AddressLine1, new {id = "addrline1", placeholder = "пр. Независимости, 123"})
    @Html.TValidationMessageFor(m => m.Addresses[0].AddressLine1, t, new { @class = "error", id = "addrline1_error" })
}
<label>@t("Название")<span class="required">*</span></label>
@Html.TextBoxFor(m => m.Person.FullName, new {id = "name", placeholder = "Иванов Иван Иванович"})
@Html.TValidationMessageFor(m => m.Person.FullName, t, new {@class = "error", id = "fullname_error"})
<table cellspacing="0">
    <tr>
        <td style="vertical-align: top;">
            <label>@t("Телефон")<span class="required">*</span></label>
            @for (int i = 0; i < Shape.Addresses[0].PhoneNumberRecords.Count; i++)
            {
                @Html.HiddenFor(m => m.Addresses[0].PhoneNumberRecords[i].Id)
                @Html.TextBoxFor(m => m.Addresses[0].PhoneNumberRecords[i].PhoneNum, new {id = "tel", placeholder = "0676712345",@class="tel_input"})
                
                if (!ViewData.ModelState.IsValidField("Addresses[0].PhoneNumberRecords[" + i + "].PhoneNum"))
                {
                    if (ViewData.ModelState["Addresses[0].PhoneNumberRecords[" + i + "].PhoneNum"].Errors[0].ErrorMessage == "Номер уже существует.")
                    {
                        <span class="field-validation-error error" data-valmsg-for="Addresses[0].PhoneNumberRecords[@i].PhoneNum" 
                              data-valmsg-replace="false" id="tel_error">@t("Номер уже существует.") 
                            @Html.RouteLink(t("Попробуйте восстановить"), QuickUrl.RouteRestorePwd())</span>
                    }
                    else
                    {
                        @Html.TValidationMessageFor(m => m.Addresses[0].PhoneNumberRecords[i].PhoneNum, t, new {@class = "error", id = "tel_error"})
                    }
                }
            }
        </td>
    </tr>
</table>
@if (Shape.PageName == PageName.UserInfo.ToString())
{
    @:&nbsp;&nbsp;<a href="javascript:void(0);" id="add_tel">Добавить</a>&nbsp;&nbsp;<a href="javascript:void(0)" class="remove_input">Удалить последний</a>
    <br/><br/>
    <label>Краткое описание</label>
    @Html.TextAreaFor(m => m.Person.Description, new {id = "desc", placeholder = "Введите здесь краткое описание вашей компании: специализация, особенности предоставляемых услуг,приемущества..",autoexpand="",type_limit="1000"})
    @Html.TValidationMessageFor(m => m.Person.Description, t, new { @class = "error", id = "descr_error" })
}
    <br/>
    <br/>
<input type="submit" value="@(Shape.PageName == PageName.UserInfo.ToString() ? t("Сохранить") : t("Добавить компанию"))" id="submit" class="btn green" />
 <br/>
<br/>
<span class="required">*</span> - @t("обязательные для заполнения поля")
